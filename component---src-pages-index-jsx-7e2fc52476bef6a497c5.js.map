{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/MesssageScreen.jsx"],"names":["query","IndexPage","props","title","srcSets","data","allFile","nodes","reduce","obj","childImageSharp","fluid","srcSet","name","rest","useStyles","createUseStyles","opacity","transform","root","position","flexGrow","display","flexDirection","justifyContent","alignItems","overflow","logo","animationName","animationDirection","animationDuration","animationDelay","animationFillMode","zIndex","maxWidth","maxHeight","margin","wormhole","transformOrigin","left","top","text","fontSize","fontFamily","play","button","background","textTransform","borderRadius","border","textDecoration","cursor","fontWeight","padding","bottom","right","buttonBig","buttonInsaneBig","MessageScreen","classes","className","MKS_LOGO_GR_1980","alt","MKS_Wormhole_01","to","join"],"mappings":"uyBAQA,IA4BaA,EAAK,UAoBHC,UA9BG,SAACC,GAAD,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,iBAEX,kBAAC,IAAD,CACEC,SAvBoB,EAuBMF,EAvBP,IACvBG,KADuB,gBACkB,GADlB,GACfC,QADe,gBACW,GADX,GACJC,YADI,MACI,GADJ,GAEbC,QAAO,SAACC,EAAD,wBAMf,IANe,YACjBC,gBADiB,gBAGb,GAHa,GAEfC,MAFe,gBAEY,GAFZ,GAENC,cAFM,MAEG,KAFH,EAIjBC,EAJiB,EAIjBA,KACGC,EALc,wDAOdL,GAPc,WAShBI,GATgB,OAUZC,GAVY,IAWfD,OACAD,WAZe,MAcf,QAhBqB,IAAC,EAAD,Q,kCCRzB,iDAMMG,EAAYC,0BAAgB,CAChC,oBAAqB,CACnB,KAAM,CACJC,QAAS,GAEX,OAAQ,CACNA,QAAS,IAGb,sBAAuB,CACrB,KAAM,CACJC,UAAW,kBACXD,QAAS,GAEX,OAAQ,CACNC,UAAW,cACXD,QAAS,IAGbE,KAAM,CACJC,SAAU,WACVC,SAAU,EACVC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,UAEZC,KAAM,CACJC,cAAe,UACfC,mBAAoB,UACpBC,kBAAmB,QACnBC,eAAgB,SAChBC,kBAAmB,OACnBC,OAAQ,EACRb,SAAU,WACVc,SAAU,OACVC,UAAW,OACXC,OAAQ,QAEVC,SAAU,iBAAO,CACfH,SAAU,OACVI,gBAAiB,SACjBV,cAAe,YACfE,kBAAmB,SACnBC,eAAgB,QAChBC,kBAAmB,OACnBC,OAAQ,EACRb,SAAU,QACVmB,KAAM,MACNC,IAAK,MACLJ,OAAQ,CACNI,IAAK,OACLD,KAAM,UAGVE,KAAM,CACJC,SAAU,OACVd,cAAe,mBACfE,kBAAmB,eACnBC,eAAgB,kBAChBC,kBAAmB,sBACnBH,mBAAoB,kBACpBI,OAAQ,EACRb,SAAU,QACVuB,WAAY,iBAEdC,KAAM,CACJhB,cAAe,UACfE,kBAAmB,QACnBC,eAAgB,UAChBC,kBAAmB,OACnBC,OAAQ,EACRb,SAAU,SAEZyB,OAAQ,CACNH,SAAU,SACVI,WAAY,gEACZC,cAAe,YACfC,aAAc,IACdC,OAAQ,iBACRC,eAAgB,OAChBC,OAAQ,UACRR,WAAY,gBACZS,WAAY,IACZC,QAAS,CACPb,IAAK,EACLc,OAAQ,EACRf,KAAM,GACNgB,MAAO,IAET,iBAAkB,CAChBL,eAAgB,SAGpBM,UAAW,CACTd,SAAU,OACVW,QAAS,CACPb,IAAK,EACLc,OAAQ,GACRf,KAAM,GACNgB,MAAO,KAGXE,gBAAiB,CACf,WAAY,CACVf,SAAU,OACVW,QAAS,CACPb,IAAK,GACLc,OAAQ,GACRf,KAAM,GACNgB,MAAO,OAIZ,CAAE1C,KAAM,kBAsCI6C,IApCO,SAACxD,GAAW,IACxBE,EAAYF,EAAZE,QACFuD,EAAU5C,EAAUb,GAC1B,OACE,yBAAK0D,UAAWD,EAAQxC,MACtB,yBACEyC,UAAWD,EAAQhC,KACnBf,OAAQR,EAAQyD,iBAAiBjD,OACjCkD,IAAI,iBAEN,yBACEF,UAAWD,EAAQtB,SACnBzB,OAAQR,EAAQ2D,gBAAgBnD,OAChCkD,IAAI,aAEN,yBACEF,UAAWD,EAAQlB,MADrB,aAKA,kBAAC,IAAD,CACEuB,GAAG,gBACHJ,UAAW,CACTD,EAAQf,KACRe,EAAQF,gBACRE,EAAQd,QAERoB,KAAK,MAPT","file":"component---src-pages-index-jsx-7e2fc52476bef6a497c5.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout/Layout';\nimport SEO from '../components/Layout/SEO';\nimport MessageScreen from '../components/MesssageScreen';\n\nconst normalizeSrcSets = ({\n  data: { allFile: { nodes = [] } = {} } = {},\n}) => nodes.reduce((obj, {\n  childImageSharp: {\n    fluid: { srcSet = null } = {},\n  } = {},\n  name,\n  ...rest\n} = {}) => ({\n  ...obj,\n  // [name]: srcSet,\n  [name]: {\n    ...rest,\n    name,\n    srcSet,\n  },\n}), {});\n\nconst IndexPage = (props) => (\n  <Layout>\n    <SEO title=\"METAKRONISMS\" />\n\n    <MessageScreen\n      srcSets={normalizeSrcSets(props)}\n    />\n  </Layout>\n);\n\nexport const query = graphql`\n  {\n    allFile(filter: {extension: {in: [\"png\", \"jpg\", \"jpeg\"]}, dir: {regex: \"/src\\\\/images$/\"}}) {\n      nodes {\n        relativePath\n        relativeDirectory\n        root\n        dir\n        name\n        extension\n        childImageSharp {\n          fluid {\n            srcSet\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport Link from './Link';\n\nconst useStyles = createUseStyles({\n  '@keyframes appear': {\n    '0%': {\n      opacity: 0,\n    },\n    '100%': {\n      opacity: 1,\n    },\n  },\n  '@keyframes wormhole': {\n    '0%': {\n      transform: 'scale(1.8, 1.8)',\n      opacity: 0,\n    },\n    '100%': {\n      transform: 'scale(1, 1)',\n      opacity: 1,\n    },\n  },\n  root: {\n    position: 'relative',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  logo: {\n    animationName: '$appear',\n    animationDirection: 'reverse',\n    animationDuration: '500ms',\n    animationDelay: '4500ms',\n    animationFillMode: 'both',\n    zIndex: 1,\n    position: 'relative',\n    maxWidth: '80vw',\n    maxHeight: '80vh',\n    margin: 'auto',\n  },\n  wormhole: () => ({\n    maxWidth: 'none',\n    transformOrigin: 'center',\n    animationName: '$wormhole',\n    animationDuration: '5500ms',\n    animationDelay: '500ms',\n    animationFillMode: 'both',\n    zIndex: 2,\n    position: 'fixed',\n    left: '50%',\n    top: '50%',\n    margin: {\n      top: '-50%',\n      left: '-50%',\n    },\n  }),\n  text: {\n    fontSize: '2rem',\n    animationName: '$appear, $appear',\n    animationDuration: '500ms, 500ms',\n    animationDelay: '6500ms, 12000ms',\n    animationFillMode: 'backwards, forwards',\n    animationDirection: 'normal, reverse',\n    zIndex: 3,\n    position: 'fixed',\n    fontFamily: 'KRSNA-DREAMER',\n  },\n  play: {\n    animationName: '$appear',\n    animationDuration: '500ms',\n    animationDelay: '12000ms',\n    animationFillMode: 'both',\n    zIndex: 4,\n    position: 'fixed',\n  },\n  button: {\n    fontSize: '1.2rem',\n    background: 'linear-gradient(lime, transparent 42%, transparent 58%, lime)',\n    textTransform: 'lowercase',\n    borderRadius: 1000,\n    border: '1px solid lime',\n    textDecoration: 'none',\n    cursor: 'pointer',\n    fontFamily: 'KRSNA-DREAMER',\n    fontWeight: 700,\n    padding: {\n      top: 4,\n      bottom: 6,\n      left: 12,\n      right: 12,\n    },\n    '&:link,&:hover': {\n      textDecoration: 'none',\n    },\n  },\n  buttonBig: {\n    fontSize: '2rem',\n    padding: {\n      top: 8,\n      bottom: 12,\n      left: 24,\n      right: 24,\n    },\n  },\n  buttonInsaneBig: {\n    '$button&': {\n      fontSize: '3rem',\n      padding: {\n        top: 17,\n        bottom: 25,\n        left: 36,\n        right: 36,\n      },\n    },\n  },\n}, { name: 'MessageScreen' });\n\nconst MessageScreen = (props) => {\n  const { srcSets } = props;\n  const classes = useStyles(props);\n  return (\n    <div className={classes.root}>\n      <img\n        className={classes.logo}\n        srcSet={srcSets.MKS_LOGO_GR_1980.srcSet}\n        alt=\"METAKRONISMS\"\n      />\n      <img\n        className={classes.wormhole}\n        srcSet={srcSets.MKS_Wormhole_01.srcSet}\n        alt=\"wormhole\"\n      />\n      <div\n        className={classes.text}\n      >\n        Yada yada\n      </div>\n      <Link\n        to=\"episode/s0/e0\"\n        className={[\n          classes.play,\n          classes.buttonInsaneBig,\n          classes.button,\n          // classes.buttonBig,\n        ].join(' ')}\n\n      >\n        Play\n      </Link>\n    </div>\n  );\n};\n\nexport default MessageScreen;\n"],"sourceRoot":""}